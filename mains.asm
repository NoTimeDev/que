;--Generated By Que!--
%include "stdmac.asm"
bits 64
default rel
section .text
global start
start:
	push rbp
	mov rbp, rsp
	sub rsp, 16
	.saveregs
	call main
	xor rdi, rdi
	mov edi, eax
	mov rax, 60
	syscall
	.dropregs
	mov rsp, rbp
	pop rbp
	ret
extern SYSCALL
global main
main:
	push rbp
	mov rbp, rsp
	sub rsp, 272
	.saveregs
	mov dword r15d, 2
	mov dword r14d, r15d
	add dword r14d, 1

	mov dword r13d, 4
	cmp r14d, r13d
	mov word r12w, 0
	mov word r11w, 1
	cmova r12w, r11w
	cmp r12w, 1
	je switch1_default
	lea r10, [switch1_cases]
	mov dword r9d, r14d
	lea r8, [r10-8 + r9d * 4]
	jmp [r8]
switch1_case1:
	lea rsi, [_str1]
	mov qword rdi, rsi
	mov qword [rbp-8], rdi
	xor rdi, rdi
	mov qword [rbp-16], rsi
	xor rsi, rsi
	mov qword [rbp-24], r8
	xor r8, r8
	mov dword [rbp-28], r9d
	xor r9, r9
	sub rsp, 16
	mov qword rbx, 1
	mov qword rdi, rbx
	mov qword r15, 1
	mov qword rsi, r15
	mov dword [rbp-64], r14d
	mov qword r14, [rbp-8]
	mov qword rdx, r14
	mov qword r13, 8
	mov qword rcx, r13
	call SYSCALL wrt ..plt
	add rsp, 16
switch1_case2:
	lea r9, [_str2]
	mov qword r8, r9
	mov qword [rbp-72], r8
	xor r8, r8
	mov qword [rbp-80], r9
	xor r9, r9
	sub rsp, 16
	mov qword r12, 1
	mov qword rdi, r12
	mov qword r11, 1
	mov qword rsi, r11
	mov qword [rbp-120], r10
	mov qword r10, [rbp-72]
	mov qword rdx, r10
	mov qword rbx, 8
	mov qword rcx, rbx
	call SYSCALL wrt ..plt
	add rsp, 16
switch1_case3:
	lea r9, [_str3]
	mov qword r8, r9
	mov qword [rbp-128], r8
	xor r8, r8
	mov qword [rbp-136], r9
	xor r9, r9
	sub rsp, 16
	mov qword r15, 1
	mov qword rdi, r15
	mov qword r14, 1
	mov qword rsi, r14
	mov qword r13, [rbp-128]
	mov qword rdx, r13
	mov qword r12, 8
	mov qword rcx, r12
	call SYSCALL wrt ..plt
	add rsp, 16
switch1_case4:
	lea r9, [_str4]
	mov qword r8, r13
	mov qword [rbp-176], r8
	xor r8, r8
	mov qword [rbp-184], r9
	xor r9, r9
	sub rsp, 16
	mov qword r11, 1
	mov qword rdi, r11
	mov qword r10, 1
	mov qword rsi, r10
	mov qword rbx, [rbp-176]
	mov qword rdx, rbx
	mov qword r15, 8
	mov qword rcx, r15
	call SYSCALL wrt ..plt
	add rsp, 16
switch1_default:
	lea r9, [_str4]
	mov qword r8, r9
	mov qword [rbp-224], r8
	xor r8, r8
	mov qword [rbp-232], r9
	xor r9, r9
	sub rsp, 16
	mov qword r14, 1
	mov qword rdi, r14
	mov qword r13, 1
	mov qword rsi, r13
	mov qword r12, [rbp-224]
	mov qword rdx, r12
	mov qword r11, 11
	mov qword rcx, r11
	call SYSCALL wrt ..plt
	add rsp, 16
end:
	mov dword r9d, 1
	mov dword eax, r9d
	.dropregs
	mov rsp, rbp
	pop rbp
	ret
section .data
	global switch1_cases
	switch1_cases: dq switch1_case1, switch1_case2, switch1_case3, switch1_case4, 
	global _str1
	_str1: db 67, 97, 115, 101, 32, 49, 33, 10, 
	global _str2
	_str2: db 67, 97, 115, 101, 32, 50, 33, 10, 
	global _str3
	_str3: db 67, 97, 115, 101, 32, 51, 33, 10, 
	global _str4
	_str4: db 67, 97, 115, 101, 32, 52, 33, 10, 
	global _str5
	_str5: db 100, 101, 102, 97, 117, 108, 116, 32, 58, 40, 10, 
section .bss
	reg_storage resq 16
	xmm_storage resq 16
;--Generated By Que!--
%include "stdmac.asm"
bits 64
default rel
section .text
extern SYSCALL
global start
start:
	push rbp
	mov rbp, rsp
	sub rsp, 32
	.saveregs
	sub rsp, 16
	call main
	add rsp, 16
	mov dword [rbp-4], eax
	mov dword r9d, [rbp-4]
	mov dword [rbp-8], r9d
	xor r9, r9
	sub rsp, 16
	mov qword r15, 60
	mov qword rdi, r15
	mov dword r14d, [rbp-8]
	mov dword esi, r14d
	call SYSCALL wrt ..plt
	add rsp, 16
	.dropregs
	mov rsp, rbp
	pop rbp
	ret
global memcpy
memcpy:
	push rbp
	mov rbp, rsp
	sub rsp, 64
	.saveregs
	mov qword [rbp-8], rdi
	mov qword [rbp-16], rsi
	mov qword [rbp-24], rdx
	mov qword r15, [rbp-16]
	mov qword [rbp-32], r15
	mov qword r14, [rbp-8]
	mov qword [rbp-40], r14
	jmp loop_cond
loop_cond:
	mov qword r13, [rbp-24]
	mov qword r12, 0
	cmp [rbp-24], r12
	mov word r11w, 0
	mov word r10w, 1
	cmovne r11w, r10w
	cmp r11w, 1
	je loop_body
	jmp loop_end
loop_body:
	mov qword r9, [rbp-24]
	mov qword r8, r9
	sub qword r8, 1

	mov qword rsi, r8
	mov qword [rbp-24], rsi
	mov qword rdi, [rbp-40]
	mov qword rcx, [rbp-32]
	mov byte dl, [rdi]
	mov byte bl, dl
	mov byte [rcx], bl
	mov qword rax, rdi
	add qword rax, 1

	mov qword [rbp-48], r15
	mov qword r15, rax
	mov qword [rbp-40], r15
	mov qword [rbp-56], r14
	mov qword r14, rcx
	add qword r14, 1

	mov qword [rbp-64], r13
	mov qword r13, r14
	mov qword [rbp-32], r13
	jmp loop_cond
loop_end:
	.dropregs
	mov rsp, rbp
	pop rbp
	ret
eset:
	lea r12, [str1]
	xor rdi, rdi
	xor rax, rax
	xor rsi, rsi
	xor rdx, rdx
	xor rcx, rcx
	xor r8, r8
	xor r9, r9
	sub rsp, 16
	mov dword r11d, 1
	mov dword edi, r11d
	mov dword r10d, 1
	mov dword esi, r10d
	mov qword rdx, r12
	mov dword ebx, 7
	mov dword ecx, ebx
	call SYSCALL wrt ..plt
	add rsp, 16
	sub rsp, 16
	mov dword r15d, 60
	mov dword edi, r15d
	mov dword r14d, 1
	mov dword esi, r14d
	call SYSCALL wrt ..plt
	add rsp, 16
global add
add:
	push rbp
	mov rbp, rsp
	sub rsp, 64
	.saveregs
	lea r15, [eblock]
	jmp [r15]
	.dropregs
	mov rsp, rbp
	pop rbp
	ret
global main
main:
	push rbp
	mov rbp, rsp
	sub rsp, 64
	.saveregs
	mov [rbps], rbp
	mov [rsps], rsp
	lea r15, [eblock]
	lea r14, [Catch]
	mov qword [r15], r14
	sub rsp, 16
	call add
	add rsp, 16
Catch:
	mov rbp, [rbps]
	mov rsp, [rsps]
	lea r9, [str2]
	mov qword [rbp-8], r9
	xor r9, r9
	sub rsp, 16
	mov dword r13d, 1
	mov dword edi, r13d
	mov dword r12d, 1
	mov dword esi, r12d
	mov qword rdx, [rbp-8]
	mov dword r11d, 7
	mov dword ecx, r11d
	call SYSCALL wrt ..plt
	add rsp, 16
	mov dword r9d, 1
	mov dword eax, r9d
	.dropregs
	mov rsp, rbp
	pop rbp
	ret
section .rodata
	global str1
	str1: db 69, 114, 114, 111, 114, 33, 10, 
	global str2
	str2: db 67, 97, 116, 99, 104, 33, 10, 
section .data
	global eblock
	eblock: dq eset
section .bss
	reg_storage resq 16
	xmm_storage resq 16
	global rsps
	rsps: resb 8
	global rbps
	rbps: resb 8
